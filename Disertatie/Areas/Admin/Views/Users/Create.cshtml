@model Disertatie.Areas.Admin.Models.UserModel
@{
    ViewBag.Title = "Creare utilizator";
    Html.EnableClientValidation();
}
@section Scripts {
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
}
<style type="text/css">
    p label
    {
        background-color: #F4F6FB;
        color: #757576;
        display: inline;
        float: left;
        font-weight: bold;
        margin-right: 10px;
        padding: 0px 10px 0px 10px;
        text-align: right;
        width: 100px;
    }
    input[type="submit"]:hover
    {
        background-color: #CEF09F;
        background-image: none;
        color: #5F9E0B;
        cursor: pointer;
    }
    input[type="submit"]
    {
        background-color: #71A22F;
        background-image: url(images/gradient_green.jpg);
        background-repeat: repeat-x;
        color: #fff;
        cursor: pointer;
        moz-border-radius: 4px;
        padding: 5px 10px;
        webkit-border-radius: 4px;
        width: 70px;
    }
</style>
<div>
    @Html.ActionLink("Inapoi la lista", "Index")
</div>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(false)
    <fieldset>
        <legend>Utilizator</legend>
        <p>
        @Html.LabelFor(m=>m.Nume)
        @Html.EditorFor(m=>m.Nume)
        @Html.ValidationMessageFor(m=>m.Nume)
        </p>
         <p>
        @Html.LabelFor(m=>m.Prenume)
        @Html.EditorFor(m => m.Prenume)
        @Html.ValidationMessageFor(m => m.Prenume)
        </p>
         <p>
        @Html.LabelFor(m=>m.Titlu)
        @Html.EditorFor(m => m.Titlu)
        @Html.ValidationMessageFor(m => m.Titlu)
        </p>
        <p>
            @Html.LabelFor(model => model.Username)
            @Html.EditorFor(model => model.Username)
            @Html.ValidationMessageFor(model => model.Username)
        </p>
        <p>
            @Html.LabelFor(model => model.Email)
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </p>
        <p>
         @Html.LabelFor(model => model.Colectiv)
            @Html.DropDownList("ddlColectiv",new SelectList(Model.Colective, "Id", "Nume"))
           @* @Html.ValidationMessageFor(model => model.Colectiv)*@
        </p>
        <p>
         @Html.LabelFor(model => model.Rol)
         @Html.DropDownList("ddlRol",(new SelectList(Model.Roluri, "Id", "NumeRol")))
        @* @Html.ValidationMessageFor(model => model.Rol)*@
        </p>
        <p>
            @Html.LabelFor(model => model.Parola)
            @Html.EditorFor(model => model.Parola)
            @Html.ValidationMessageFor(model => model.Parola)
        </p>
        <p>
            @Html.LabelFor(model => model.ConfirmareParola)
            @Html.EditorFor(model => model.ConfirmareParola)
            @Html.ValidationMessageFor(model => model.ConfirmareParola)
        </p>
        <p>
            @Html.LabelFor(model => model.IntrebareParola)
            @Html.EditorFor(model => model.IntrebareParola)
            @Html.ValidationMessageFor(model => model.IntrebareParola)
        </p>
        <p>
            @Html.LabelFor(model => model.RaspunsParola)
            @Html.EditorFor(model => model.RaspunsParola)
            @Html.ValidationMessageFor(model => model.RaspunsParola)
        </p>
        <p>
            @Html.LabelFor(model => model.Comentariu)
            @Html.EditorFor(model => model.Comentariu)
            @Html.ValidationMessageFor(model => model.Comentariu)
        </p>
        <p>
            @Html.LabelFor(model => model.Aprobat)
            @Html.EditorFor(model => model.Aprobat)
            @Html.ValidationMessageFor(model => model.Aprobat)
        </p>
        <p style="margin-left: 130px">
            <input type="submit" value="Creeaza utilizator" style="width: 130px" />
        </p>
    </fieldset>
}
